knitr::opts_chunk$set(echo = TRUE)
# set working directory
setwd("C:/Users/aanan/Documents/GitHub/ANLY500Project/") # Team, please change this to a directory on your computer when you add code, else your code won't execute
# add packages
Salaries <- read.csv("salaries.csv")
knitr::include_graphics("Variable Descriptions.png")
knitr::opts_chunk$set(echo = TRUE)
# set working directory
setwd("C:/Users/aanan/Documents/GitHub/ANLY500Project/") # Team, please change this to a directory on your computer when you add code, else your code won't execute
# add packages
knitr::include_graphics("Variable Descriptions.png")
summary(Salaries)
head(Salaries)
library("dplyr")
recode(Salaries$experience_level, EN = 1, MI = 2, SE = 3, EX = 4)
Salaries -> recode(Salaries$experience_level, EN = 1, MI = 2, SE = 3, EX = 4)
View(Salaries)
Salaries$experience_level -> recode(Salaries$experience_level, EN = 1, MI = 2, SE = 3, EX = 4)
library("dplyr")
Salaries$experience_level -> recode(Salaries$experience_level, EN = 1, MI = 2, SE = 3, EX = 4)
Salaries$experience_level <- recode(Salaries$experience_level, EN = 1, MI = 2, SE = 3, EX = 4)
View(Salaries)
knitr::opts_chunk$set(echo = TRUE)
# set working directory
setwd("C:/Users/aanan/Documents/GitHub/ANLY500Project/") # Team, please change this to a directory on your computer when you add code, else your code won't execute
# add packages
Salaries <- read.csv("salaries.csv")
knitr::include_graphics("Variable Descriptions.png")
head(Salaries)
library("dplyr")
Salaries$experience_level <- recode(Salaries$experience_level, EN = 1, MI = 2, SE = 3, EX = 4)
Salaries$employment_type <- recode(Salaries$employment_type, PT=1, FT=2, CT=3, FL=4)
Salaries$company_size <- recode(Salaries$company_size, S = 1, M = 2, L = 3)
View(Salaries)
Salaries <- Salaries[1:4,7:11]
knitr::opts_chunk$set(echo = TRUE)
# set working directory
setwd("C:/Users/aanan/Documents/GitHub/ANLY500Project/") # Team, please change this to a directory on your computer when you add code, else your code won't execute
# add packages
Salaries <- read.csv("salaries.csv")
knitr::include_graphics("Variable Descriptions.png")
head(Salaries)
library("dplyr")
Salaries$experience_level <- recode(Salaries$experience_level, EN = 1, MI = 2, SE = 3, EX = 4)
Salaries$employment_type <- recode(Salaries$employment_type, PT=1, FT=2, CT=3, FL=4)
Salaries$company_size <- recode(Salaries$company_size, S = 1, M = 2, L = 3)
Salaries <- Salaries[c(1:4,7:11),]
View(Salaries)
knitr::opts_chunk$set(echo = TRUE)
# set working directory
setwd("C:/Users/aanan/Documents/GitHub/ANLY500Project/") # Team, please change this to a directory on your computer when you add code, else your code won't execute
# add packages
Salaries <- read.csv("salaries.csv")
knitr::include_graphics("Variable Descriptions.png")
head(Salaries)
library("dplyr")
Salaries$experience_level <- recode(Salaries$experience_level, EN = 1, MI = 2, SE = 3, EX = 4)
Salaries$employment_type <- recode(Salaries$employment_type, PT=1, FT=2, CT=3, FL=4)
Salaries$company_size <- recode(Salaries$company_size, S = 1, M = 2, L = 3)
Salaries <- Salaries[,c(1:4,7:11)]
View(Salaries)
knitr::opts_chunk$set(echo = TRUE)
# set working directory
setwd("C:/Users/aanan/Documents/GitHub/ANLY500Project/") # Team, please change this to a directory on your computer when you add code, else your code won't execute
# add packages
Salaries <- read.csv("salaries.csv")
knitr::include_graphics("Variable Descriptions.png")
head(Salaries)
library("dplyr")
Salaries$experience_level <- recode(Salaries$experience_level, EN = 1, MI = 2, SE = 3, EX = 4)
Salaries$employment_type <- recode(Salaries$employment_type, PT=1, FT=2, CT=3, FL=4)
Salaries$company_size <- recode(Salaries$company_size, S = 1, M = 2, L = 3)
#Salaries <- Salaries[,c(1:4,7:11)]
View(Salaries)
Salaries <- Salaries[,c(1:4,7,9:11)]
View(Salaries)
View(Salaries)
Salaries$remote_ratio <- as.factor(Salaries$remote_ratio)
View(Salaries)
Salaries$remote_ratio <- as.factor(Salaries$remote_ratio)
Salaries$experience_level <- as.factor(Salaries$experience_level)
Salaries$employment_type <- as.factor(Salaries$employment_type)
Salaries$company_size <- as.factor(Salaries$company_size)
View(Salaries)
summary(Salaries)
Salaries$remote_ratio <- recode(Salaries$remote_ratio, 0 = 1, 50 = 2, 100 = 3)
Salaries$remote_ratio <- recode(Salaries$remote_ratio, "0" = 1, "50" = 2, "100" = 3)
View(Salaries)
Salaries$remote_ratio <- as.factor(Salaries$remote_ratio)
View(Salaries)
summary(Salaries)
summary(Salaries[1:3,5:6,8])
summary(Salaries)
summary(Salaries[c(1:3,5:6,8)])
count(is.na(Salaries))
sum(is.na(Salaries))
apply(Salaries[,-c(4,7)],2,mean)
knitr::opts_chunk$set(echo = TRUE)
# set working directory
setwd("C:/Users/aanan/Documents/GitHub/ANLY500Project/") # Team, please change this to a directory on your computer when you add code, else your code won't execute
# add packages
Salaries <- read.csv("salaries.csv")
knitr::include_graphics("Variable Descriptions.png")
head(Salaries)
library("dplyr")
Salaries$experience_level <- recode(Salaries$experience_level, EN = 1, MI = 2, SE = 3, EX = 4)
Salaries$employment_type <- recode(Salaries$employment_type, PT=1, FT=2, CT=3, FL=4)
Salaries$company_size <- recode(Salaries$company_size, S = 1, M = 2, L = 3)
Salaries$remote_ratio <- recode(Salaries$remote_ratio, "0" = 1, "50" = 2, "100" = 3)
Salaries <- Salaries[,c(1:4,7,9:11)]
#Salaries$remote_ratio <- as.factor(Salaries$remote_ratio)
#Salaries$experience_level <- as.factor(Salaries$experience_level)
#Salaries$employment_type <- as.factor(Salaries$employment_type)
#Salaries$company_size <- as.factor(Salaries$company_size)
#Salaries$remote_ratio <- as.factor(Salaries$remote_ratio)
summary(Salaries[c(1:3,5:6,8)])
sum(is.na(Salaries))
apply(Salaries[,-c(4,7)],2,mean)
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
# set working directory
setwd("C:/Users/aanan/Documents/GitHub/ANLY500Project/") # Team, please change this to a directory on your computer when you add code, else your code won't execute
# add packages
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
# set working directory
setwd("C:/Users/aanan/Documents/GitHub/ANLY500Project/") # Team, please change this to a directory on your computer when you add code, else your code won't execute
# add packages
Salaries <- read.csv("salaries.csv")
knitr::include_graphics("Variable Descriptions.png")
head(Salaries)
library("dplyr")
Salaries$experience_level <- recode(Salaries$experience_level, EN = 1, MI = 2, SE = 3, EX = 4)
Salaries$employment_type <- recode(Salaries$employment_type, PT=1, FT=2, CT=3, FL=4)
Salaries$company_size <- recode(Salaries$company_size, S = 1, M = 2, L = 3)
Salaries$remote_ratio <- recode(Salaries$remote_ratio, "0" = 1, "50" = 2, "100" = 3)
Salaries <- Salaries[,c(1:4,7,9:11)]
#Salaries$remote_ratio <- as.factor(Salaries$remote_ratio)
#Salaries$experience_level <- as.factor(Salaries$experience_level)
#Salaries$employment_type <- as.factor(Salaries$employment_type)
#Salaries$company_size <- as.factor(Salaries$company_size)
#Salaries$remote_ratio <- as.factor(Salaries$remote_ratio)
summary(Salaries[c(1:3,5:6,8)])
sum(is.na(Salaries))
apply(Salaries[,-c(4,7)],2,mean)
round(apply(Salaries[,-c(4,7)],2,mean),0)
round(apply(Salaries[,-c(4,7)],2,mean),1)
round(apply(Salaries[,-c(4,7)],2,sd),1)
ncol(Salaries[,-c(4,7)])
summary(mahal < cutoff)
mahal <- mahalanobis(Salaries[,-c(4,7)],
colMeans(Salaries[,-c(4,7)]),
cov(Salaries[,-c(4,7)],use = "pairwise.complete.obs"))
cutoff <- qchisq(1-0.001,ncol(Salaries[,-c(4,7)]))
summary(mahal < cutoff)
Salaries_Outliers <- subset(all_columns, mahal >= cutoff)
Salaries_Outliers <- subset(Salaries, mahal >= cutoff)
View(Salaries_Outliers)
Salaries_NoOutliers <- subset(Salaries, mahal < cutoff)
write.csv(Salaries_NoOutliers, "Salaries_clean.csv")
write.csv(Salaries_NoOutliers, "salaries_clean.csv")
write.csv(Salaries_NoOutliers, "salaries_clean.csv")
write.csv(Salaries_NoOutliers, "salaries_clean.csv")
read.csv("salaries_clean.csv")
Salaries_clean <- read.csv("salaries_clean.csv")
# add packages
library("dplyr")
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
# set working directory
setwd("C:/Users/aanan/Documents/GitHub/ANLY500Project/") # Team, please change this to a directory on your computer when you add code, else your code won't execute
# add packages
library("dplyr")
hist(Salaries, breaks = 15, main = paste("Salaries of Data Roles in Tech"),xlab = "Salaries", ylab = "No. of Employees")
hist(Salaries$salary_in_usd, breaks = 15, main = paste("Salaries of Data Roles in Tech"),xlab = "Salaries", ylab = "No. of Employees")
hist(Salaries$salary_in_usd, breaks = 30, main = paste("Salaries of Data Roles in Tech"),xlab = "Salaries", ylab = "No. of Employees", xlim = c(0,700000), ylim = c(0,300))
hist(Salaries$salary_in_usd, breaks = 30, main = paste("Salaries of Data Roles in Tech"),xlab = "Salaries", ylab = "No. of Employees", xlim = c(0,700000), ylim = c(0,150))
hist(Salaries$salary_in_usd, breaks = 30, main = paste("Salaries of Data Roles in Tech"),xlab = "Salaries", ylab = "No. of Employees", xlim = c(0,600000), ylim = c(0,150))
hist(Salaries$salary_in_usd, breaks = 40, main = paste("Salaries of Data Roles in Tech"),xlab = "Salaries", ylab = "No. of Employees", xlim = c(0,600000), ylim = c(0,150))
hist(Salaries$salary_in_usd, breaks = 40, main = paste("Salaries of Data Roles in Tech"),xlab = "Salaries", ylab = "No. of Employees", xlim = c(0,600000), ylim = c(0,150))
## AA note, please use "Salaries" rather than "Salaries_clean" for summary of data
cleanup <- theme(panel.grid.major = element_blank(), #no grid lines
panel.grid.minor = element_blank(), #no grid lines
panel.background = element_blank(), #no background
axis.line.x = element_line(color = 'black'), #black x axis line
axis.line.y = element_line(color = 'black'), #black y axis line
legend.key = element_rect(fill = 'white'), #no legend background
text = element_text(size = 12)) #bigger text size
library("ggplot2")
## AA note, please use "Salaries" rather than "Salaries_clean" for summary of data
cleanup <- theme(panel.grid.major = element_blank(), #no grid lines
panel.grid.minor = element_blank(), #no grid lines
panel.background = element_blank(), #no background
axis.line.x = element_line(color = 'black'), #black x axis line
axis.line.y = element_line(color = 'black'), #black y axis line
legend.key = element_rect(fill = 'white'), #no legend background
text = element_text(size = 12)) #bigger text size
summary(Salaries)
plot(x=Salaries_clean$experience_level, y=Salaries_clean$salary_in_usd,
xlab = "Experience_Level",
ylab = "Salary",
main = "Experience vs Salary",
col="purple",
pch =19)
plot(x=Salaries_clean$work_year, y=Salaries_clean$salary_in_usd,
xlab = "work_year",
ylab = "Salary",
main = "work_year vs Salary",
col="purple",
pch =19)
plot(x=Salaries_clean$employment_type, y=Salaries_clean$salary_in_usd,
xlab = "employment_type",
ylab = "Salary",
main = "employment_type vs Salary",
col="purple",
pch =19)
# From the descriptive Scatter plot, we can see that generally speaking, the higher the experience level is, the higher the Salary will be.
# Similarly, the more work year, the higher the Salary.
View(Salaries)
View(Salaries)
Salaries <- read.csv("salaries.csv")
View(Salaries)
head(Salaries)
Salaries <- Salaries[,c(1:4,7,9:11)]
View(Salaries)
View(Salaries)
View(Salaries)
bar1 <- ggplot(Salaries, aes(experience_level, salary_in_usd, fill = company_size))
bar1 +
stat_summary(fun = mean,
geom = "bar",
position = "dodge") +
stat_summary(fun.data = mean_cl_normal,
geom = "errorbar",
position = position_dodge(width = 0.90),
width = 0.2) +
xlab("Experience Level") +
ylab("Salary") +
cleanup +
scale_fill_manual(name = "Company Size",
labels = c("Large", "Medium", "Small"),
values = c("blue", "darkgreen", "maroon"))
bar1 <- ggplot(Salaries, aes(experience_level, salary_in_usd, fill = company_size))
bar1 +
stat_summary(fun = mean,
geom = "bar",
position = "dodge") +
stat_summary(fun.data = mean_cl_normal,
geom = "errorbar",
position = position_dodge(width = 0.90),
width = 0.2) +
xlab("Experience Level") +
ylab("Salary") +
axis(1, at = c("Entry", "Executive", "Mid", "Senior")) +
cleanup +
scale_fill_manual(name = "Company Size",
labels = c("Large", "Medium", "Small"),
values = c("blue", "darkgreen", "maroon"))
bar1 <- ggplot(Salaries, aes(experience_level, salary_in_usd, fill = company_size))
bar1 +
stat_summary(fun = mean,
geom = "bar",
position = "dodge") +
stat_summary(fun.data = mean_cl_normal,
geom = "errorbar",
position = position_dodge(width = 0.90),
width = 0.2) +
xlab("Experience Level") +
ylab("Salary") +
cleanup +
scale_fill_manual(name = "Company Size",
labels = c("Large", "Medium", "Small"),
values = c("blue", "darkgreen", "maroon"))
knitr::opts_chunk$set(echo = TRUE)
download.file("http://www.openintro.org/stat/data/nc.RData", destfile = "nc.RData")
load("nc.RData")
names(nc)
dim(nc)
summary(nc)
plot(nc$weight ~ nc$habit)
boxplot(nc$weight ~ nc$habit)
by(nc$weight, nc$habit, mean)
by(nc$weight, nc$habit, length)
table(nc$habit)
inference(y = nc$weight, x = nc$habit, est = "mean", type = "ht", null = 0,
alternative = "twosided", method = "theoretical")
inference(y = nc$weight, x = nc$habit, est = "mean", type = "ci", null = 0,
alternative = "twosided", method = "theoretical",
order = c("smoker","nonsmoker"))
knitr::opts_chunk$set(echo = TRUE)
download.file("http://www.openintro.org/stat/data/nc.RData", destfile = "nc.RData")
load("nc.RData")
names(nc)
dim(nc)
summary(nc)
plot(nc$weight ~ nc$habit)
boxplot(nc$weight ~ nc$habit)
by(nc$weight, nc$habit, mean)
by(nc$weight, nc$habit, length)
table(nc$habit)
inference(y = nc$weight, x = nc$habit, est = "mean", type = "ht", null = 0,
alternative = "twosided", method = "theoretical")
inference(y = nc$weight, x = nc$habit, est = "mean", type = "ci", null = 0,
alternative = "twosided", method = "theoretical",
order = c("smoker","nonsmoker"))
inference(y = nc$weeks, est = "mean", type = "ci", null = 0,
alternative = "twosided", method = "theoretical")
inference(y = nc$weeks, est = "mean", type = "ht", null = 0,
alternative = "twosided", method = "theoretical", conflevel = 0.90)
inference(y = nc$weeks, est = "mean", type = "ht", null = 0,
alternative = "twosided", method = "theoretical", conflevel = 0.90)
inference(y = nc$weeks, est = "mean", type = "ci", null = 0,
alternative = "twosided", method = "theoretical", conflevel = 0.90)
inference(y = nc$weight, x = nc$mature, est = "mean", type = "ht", null = 0,
alternative = "twosided", method = "theoretical")
inference(y = nc$gained, x = nc$mature, est = "mean", type = "ht", null = 0,
alternative = "twosided", method = "theoretical")
